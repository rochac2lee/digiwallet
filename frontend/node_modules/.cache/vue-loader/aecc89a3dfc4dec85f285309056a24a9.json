{"remainingRequest":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rochac2lee/Documentos/Encode/digiwallet/frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/src/App.vue","mtime":1638799355591},{"path":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633650308544},{"path":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/node_modules/babel-loader/lib/index.js","mtime":1633650308503},{"path":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633650308544},{"path":"/home/rochac2lee/Documentos/Encode/digiwallet/frontend/node_modules/vue-loader/lib/index.js","mtime":1638799379159}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknCmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ0AvdXRpbHMnCmltcG9ydCBMYXlvdXRCbGFuayBmcm9tICdAL2xheW91dHMvQmxhbmsudnVlJwppbXBvcnQgTGF5b3V0Q29udGVudCBmcm9tICdAL2xheW91dHMvQ29udGVudC52dWUnCmltcG9ydCBVcGdyYWRlVG9Qcm8gZnJvbSAnLi9jb21wb25lbnRzL1VwZ3JhZGVUb1Byby52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTGF5b3V0QmxhbmssCiAgICBMYXlvdXRDb250ZW50LAogICAgVXBncmFkZVRvUHJvLAogIH0sCiAgc2V0dXAoKSB7CiAgICBjb25zdCB7IHJvdXRlIH0gPSB1c2VSb3V0ZXIoKQoKICAgIGNvbnN0IHJlc29sdmVMYXlvdXQgPSBjb21wdXRlZCgoKSA9PiB7CiAgICAgIC8vIEhhbmRsZXMgaW5pdGlhbCByb3V0ZQogICAgICBpZiAocm91dGUudmFsdWUubmFtZSA9PT0gbnVsbCkgcmV0dXJuIG51bGwKCiAgICAgIGlmIChyb3V0ZS52YWx1ZS5tZXRhLmxheW91dCA9PT0gJ2JsYW5rJykgcmV0dXJuICdsYXlvdXQtYmxhbmsnCgogICAgICByZXR1cm4gJ2xheW91dC1jb250ZW50JwogICAgfSkKCiAgICByZXR1cm4gewogICAgICByZXNvbHZlTGF5b3V0LAogICAgfQogIH0sCn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <component :is=\"resolveLayout\">\n    <router-view></router-view>\n    <upgrade-to-pro></upgrade-to-pro>\n  </component>\n</template>\n\n<script>\nimport { computed } from '@vue/composition-api'\nimport { useRouter } from '@/utils'\nimport LayoutBlank from '@/layouts/Blank.vue'\nimport LayoutContent from '@/layouts/Content.vue'\nimport UpgradeToPro from './components/UpgradeToPro.vue'\n\nexport default {\n  components: {\n    LayoutBlank,\n    LayoutContent,\n    UpgradeToPro,\n  },\n  setup() {\n    const { route } = useRouter()\n\n    const resolveLayout = computed(() => {\n      // Handles initial route\n      if (route.value.name === null) return null\n\n      if (route.value.meta.layout === 'blank') return 'layout-blank'\n\n      return 'layout-content'\n    })\n\n    return {\n      resolveLayout,\n    }\n  },\n}\n</script>\n"]}]}