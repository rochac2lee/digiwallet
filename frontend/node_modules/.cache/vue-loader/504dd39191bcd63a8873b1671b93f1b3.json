{"remainingRequest":"/home/rochac2lee/Documentos/Encode/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/rochac2lee/Documentos/Encode/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rochac2lee/Documentos/Encode/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rochac2lee/Documentos/Encode/frontend/src/views/cards/CardBasic.vue?vue&type=template&id=6fcca708&scoped=true&","dependencies":[{"path":"/home/rochac2lee/Documentos/Encode/frontend/src/views/cards/CardBasic.vue","mtime":1638799355603},{"path":"/home/rochac2lee/Documentos/Encode/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633650308544},{"path":"/home/rochac2lee/Documentos/Encode/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1638799379159},{"path":"/home/rochac2lee/Documentos/Encode/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1633650308544},{"path":"/home/rochac2lee/Documentos/Encode/frontend/node_modules/vue-loader/lib/index.js","mtime":1638799379159}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}